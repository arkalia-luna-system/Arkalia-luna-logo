"""
üåå Cosmic Logo Generator
G√©n√©rateur sp√©cialis√© pour les logos avec sph√®res cosmiques lumineuses
"""

from pathlib import Path
from typing import Optional

from .cosmic_sphere_builder import CosmicSphereBuilder
from .logo_generator import ArkaliaLunaLogo


class CosmicLogoGenerator(ArkaliaLunaLogo):
    """G√©n√©rateur de logos avec sph√®res cosmiques et r√©seaux neuronaux"""

    def __init__(self, output_dir: Optional[Path] = None):
        # Appel du constructeur parent avec r√©pertoire sp√©cialis√©
        super().__init__(output_dir or Path("exports-cosmic"))

        self.logger.info("üåå Cosmic Logo Generator initialis√© avec succ√®s")

        # Remplacement du SVG builder par le builder cosmique
        self.svg_builder = CosmicSphereBuilder()

    def get_generator_stats(self) -> dict:
        """Retourne les statistiques du g√©n√©rateur cosmique"""
        return {
            "generator_type": "Cosmic Sphere",
            "features": [
                "Sph√®res cosmiques lumineuses",
                "R√©seaux neuronaux internes",
                "Cristaux centraux brillants",
                "D√©grad√©s fluides bleu/violet/cyan",
                "Particules cosmiques flottantes",
                "Halo lumineux",
                "Texture de surface r√©aliste",
                "Filtres de glow avanc√©s",
            ],
            "inspiration": "Images d'inspiration utilisateur - esth√©tique cosmique moderne",
            "quality": "Haute qualit√© - reproduction fid√®le de l'inspiration",
        }
